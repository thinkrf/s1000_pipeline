name: S1000  Application Pipeline

on:
  workflow_dispatch:
    inputs:        
      InstallerType: 
        type: choice
        description: 'The standalone mode creates an electron frontend execulatable and backend agent. The web mode, creates a backend agent only which launches a web browser'     
        options: 
            - web
            - standalone
      FrontendReleaseTag:
        description: 'The S1000 frontend tag that you would like to create a release. Ex: 1.3.0'     
        required: true  
      BackendReleaseTag:
        description: 'The S1000 backend tag that you would like to create a release. Ex: 1.3.0'     
        required: true    
      ChangelogComment:
        description: 'A sentence or short paragraph describing the important changes since the last packaging'
        required: true
      Stability:
        type: choice
        description: 'The stability of the built version (based on the amount of testing)'
        options:
          - unstable
          - testing
          - stable
          
env:
  QT_VERSION: '6.5.2'

jobs:
  build-and-push-image:
    runs-on: windows-latest
    
    permissions:
      contents: read
      packages: write
    steps:
      - name: Print Release Version
        run: |
          echo "Backend Release ${{ github.event.inputs.BackendReleaseTag }}"
          echo "Frontend Release ${{ github.event.inputs.FrontendReleaseTag }}"
    

      - name: Install Bitbucket SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.BITBUCKET_SSH_PRIVATE_KEY }}
          name: id_rsa_bit
          known_hosts: ${{ secrets.KNOWN_HOSTS_BITBUCKET }}
          config: |
            Host bitbucket-git
              HostName bitbucket.org
              IdentityFile ~/.ssh/id_rsa_bit
          if_key_exists: replace


      - name: Retrieve Frontend Repository 
        run: |
          git clone git@bitbucket-git:thinkrfsoftware/s1000_frontend.git
          cd s1000_frontend
          git checkout ${{ github.event.inputs.FrontendReleaseTag }}          
            

      - name: Retrieve Backend Repository and build
        run: |
          git clone git@bitbucket-git:thinkrfsoftware/s1000_backend.git
          cd s1000_backend
          git checkout ${{ github.event.inputs.BackendReleaseTag }}

      - name: Retrieve Installer Repository
        run: |
          git clone git@bitbucket-git:thinkrfsoftware/s1000-installer.git     


      - name: Inno-setup
        shell: pwsh
        run: |
          Invoke-WebRequest -OutFile inno.exe -Uri https://jrsoftware.org/download.php/is.exe
          Start-Process -Wait -FilePath $PWD\inno.exe -Argument "/silent" -PassThru

      - name: Determine Inno Setup Script Path
        id: script-path
        run: |
          if [[ "${{ github.event.inputs.InstallerType }}" == "standalone" ]]; then
            echo "::set-output name=path::installer/packaging/windows/standalone/inno-setup.iss"
          elif [[ "${{ github.event.inputs.InstallerType }}" == "web" ]]; then
            echo "::set-output name=path::installer/packaging/windows/web/inno-setup.iss"
          else 
            echo "Invalid InstallerType specified."
            exit 1
          fi

      - name: Build Installer
        run: |
          # Navigate to the dynamically determined directory where your Inno Setup script is located
          cd ${{ steps.script-path.outputs.path }}
          
          # Build the installer using the provided .iss script
          iscc /Q /O"$OUTPUT_DIRECTORY" "inno-setup.iss"

        # Uploads built windows installer as an artifact
      - name: Upload Installer
        uses: actions/upload-artifact@v2
        with:
          name: windows-installer-artifact
          path: $OUTPUT_DIRECTORY/output/*